package SensorNetworkAlt
public
	with MobilePhone;
	with Modem;
	with DataTypes;
	with SensorUnitAlt;

	system SensorNetwork
		features
			gprs_out: out event data port DataTypes::aggregated_sensor_data;
			internet_out: out data port DataTypes::aggregated_sensor_data;
		flows
			flow_gprs: flow source gprs_out;
			flow_wifi: flow source internet_out;
	end SensorNetwork;

	system implementation SensorNetwork.impl
		subcomponents
			sensor_unit: system SensorUnitAlt::SensorUnit.impl[5];
			mobile_phone: system MobilePhone::MobilePhone.impl;
			modem: system Modem::Modem.impl;
		connections
			gprs_conn: port sensor_unit.gprs_out -> gprs_out {Connection_Pattern => ((all_to_one));};
			bluetooth_con: port sensor_unit.bluetooth_out -> mobile_phone.sensor_data {Connection_Pattern => ((all_to_one));};
			wifi_conn: port sensor_unit.wifi_out -> modem.wifi_in {Connection_Pattern => ((all_to_one));};
			
			power_conn: port mobile_phone.sensor_power_toggle -> sensor_unit.toggle_power {Connection_Pattern => ((one_to_all));};
			
			alarm_phone_conn: port sensor_unit.alarm_out -> mobile_phone.alarm_toggle {Connection_Pattern => ((all_to_one));};
			
			internet_conn: port modem.internet_out -> internet_out;
			
		flows
			flow_gprs: flow source sensor_unit.flow_alt_gprs -> gprs_conn -> gprs_out;
			flow_wifi: flow source sensor_unit.flow_alt_wifi -> wifi_conn -> modem.flow_wifi -> internet_conn -> internet_out;
			etef_alt_sensor_phone: end to end flow sensor_unit.flow_alt_bluetooth -> bluetooth_con -> mobile_phone.flow_data;
			etef_sensor_alarm_phone: end to end flow sensor_unit.flow_alt_alarm -> alarm_phone_conn -> mobile_phone.flow_alarm;
	end SensorNetwork.impl;
	
end SensorNetworkAlt;